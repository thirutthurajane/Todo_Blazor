@page "/"
@using TodoList.Models
@using TodoList.Services
@inject TodoServices _todoServices
@inject NavigationManager _navigationManager
<PageTitle>Index</PageTitle>

<div class="card">
    <div class="card-header">
        <div class="text-center">
            <h1>Todo List</h1>
        </div>
        <div class="text-center">
            <p>Create for learn web assembly</p>
        </div>
        <div class="card-body">
            <input class="form-control" placeholder="Realtime filter" @oninput="@(args => OnFilter(args.Value.ToString()))"/>
            @if (_todoList != null)
            {
                <div class="row mt-2">
                    @foreach (var todo in _todoList!)
                    {
                        <div class="col-4">
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>@todo.Title</h4>
                                </div>
                                <div class="card-body">
                                    <p>@todo.Detail</p>
                                </div>
                                <div class="card-footer">
                                    <button class="btn btn-primary" @onclick="() => OnEdit(todo.Id)">Edit</button>
                                    <button class="btn btn-danger" type="button" @onclick="() => OnDelete(todo.Id)">Delete</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>
<SurveyPrompt Title="How is Blazor working for you?"/>

@code
{
    private string Filter { get; set; }
    List<Todo>? _todoList;

    protected override async Task OnInitializedAsync()
    {
        _todoList = await Task.Run(() => _todoServices.GetAllTodoAsync());
    }


    private async Task OnDelete(int id)
    {
        await _todoServices.DeleteTodo(id);
        _todoList = await Task.Run(() => _todoServices.GetAllTodoAsync());
    }

    private void OnEdit(int id)
    {
        _navigationManager.NavigateTo($"edit/{id}");
    }

    private async Task OnFilter(string? args)
    {
        Filter = args;
        Console.WriteLine(Filter);
        _todoList = await _todoServices.GetTodoByTitle(Filter);
    }
}